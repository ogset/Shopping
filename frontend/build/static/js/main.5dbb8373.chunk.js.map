{"version":3,"sources":["slices/productSlice.js","apis/axios.instance.js","slices/cartSlice.js","slices/userSlice.js","slices/orderSlice.js","store.js","components/Header.js","components/Footer.js","components/Product/Rating.js","components/Product/Product.js","components/Loader.js","screens/HomeScreen.js","screens/ProductScreen.js","components/Cart/Items.js","components/Cart/OrderSummary.js","screens/CartScreen.js","screens/LoginScreen.js","screens/RegisterScreen.js","components/Profile/Info/UserInfoForm.js","components/Profile/Info/UserInfo.js","screens/ProfileScreen.js","screens/OrdersScreen.js","components/Profile/Address/SelectedAddress.js","components/Profile/Address/UserAddressInfo.js","components/Profile/Address/Addresses.js","components/Profile/Address/AddressForm.js","screens/AddressScreen.js","screens/PlaceOrderScreen.js","App.js","reportWebVitals.js","index.js"],"names":["getAllProducts","createAsyncThunk","a","axios","get","data","getProduct","id","productListSlice","createSlice","name","initialState","products","loading","productsData","status","error","product","productData","reducers","extraReducers","pending","state","fulfilled","action","payload","rejected","instance","create","baseURL","headers","cart","totalPrice","getProductsFromUserCart","_","rejectWithValue","getState","userList","userData","userId","token","useAxios","defaults","common","post","response","adjustProductInUserCart","adjustData","put","updateUserCart","patch","cartSlice","adjustCart","_id","price","image","opr","index","findIndex","item","toString","unshift","quantity","splice","parseFloat","toFixed","clearCart","adjustCartCheck","dispatch","actions","userProfile","userAddresses","admission","userInfo","route","console","log","message","getProfile","updateUserProfile","updateData","getUserAddresses","updateUserAddresses","addressData","userSlice","reset","clearError","resetStatus","orders","placeOrder","getUserOrders","orderSlice","reducer","combineReducers","productsList","productReducer","cartList","cartReducer","userReducer","orderList","orderReducer","persistConfig","key","storage","persistedReducer","persistReducer","configureStore","devTools","process","middleware","thunk","Header","useDispatch","useSelector","history","useHistory","Navbar","collapseOnSelect","expand","bg","variant","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","length","reduce","acc","crnt","NavDropdown","title","Item","onClick","push","Footer","Row","Col","Rating","color","rating","review","map","style","defaultProps","Product","numReviews","Card","Img","src","Body","Title","as","Text","Loader","Spinner","animation","role","height","width","margin","display","HomeScreen","useEffect","Alert","sm","md","lg","xl","ProductScreen","match","params","cartLoading","description","countInStock","Image","alt","fluid","ListGroup","Button","type","disabled","block","size","aria-hidden","CartItem","rounded","value","OrderSummary","shipping","href","CartScreen","Items","LoginScreen","useState","email","setEmail","password","setPassword","xs","Form","onSubmit","e","preventDefault","Group","controlId","Label","Control","placeholder","onChange","target","minLength","RegisterScreen","setName","confirmPassword","setConfirmPassword","passwordCheck","setPasswordCheck","setMessage","prevent","default","required","psw","UserInfoForm","profile","currentPassword","setCurrentPassword","result","setResult","errorResult","setErrorResult","statusCheck","setTimeout","ListGroupItem","transition","UserInfo","Accordion","eventKey","ProfileScreen","OrdersScreen","order","Date","createdAt","toLocaleDateString","undefined","month","day","hour","minute","orderItems","deliveryAddress","firstName","lastName","maxHeight","billingAddress","street","postalCode","city","country","SelectedAddress","address","num","scr","fontSize","slice","padding","defaultDelivery","defaultBilling","UserAddressInfo","addresses","filteredAddress","filter","Addresses","onChangeHandler","checked","opt","add","label","ProfileAddressForm","setTitle","setFirstName","setLastName","setStreet","setCity","setPostalCode","setCountry","maxLength","AddressScreen","AddressForm","PlaceOrderScreen","App","routes","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","persistor","persistStore","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5dbb8373.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nconst initialState = {\r\n  products: {\r\n    loading: false,\r\n    productsData: [],\r\n    status: null,\r\n    error: null,\r\n  },\r\n  product: {\r\n    loading: false,\r\n    productData: {},\r\n    status: null,\r\n    error: null,\r\n  },\r\n}\r\nexport const getAllProducts = createAsyncThunk(\r\n  'productList/getAllProducts',\r\n  async () => {\r\n    const { data } = await axios.get('/api/products')\r\n    return data\r\n  }\r\n)\r\nexport const getProduct = createAsyncThunk(\r\n  'productList/getProduct',\r\n  async (id) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n    return data\r\n  }\r\n)\r\n\r\nexport const productListSlice = createSlice({\r\n  name: 'productList',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getAllProducts.pending]: (state) => {\r\n      state.products.loading = true\r\n      state.products.status = 'loading'\r\n    },\r\n    [getAllProducts.fulfilled]: (state, action) => {\r\n      state.products.loading = false\r\n      state.products.productsData = action.payload\r\n      state.products.status = 'success'\r\n      state.product.productData = {}\r\n    },\r\n    [getAllProducts.rejected]: (state, action) => {\r\n      state.products.loading = false\r\n      state.products.status = 'failed'\r\n      // state.products.error = action.error\r\n    },\r\n    [getProduct.pending]: (state) => {\r\n      state.product.loading = true\r\n      state.product.status = 'loading'\r\n    },\r\n    [getProduct.fulfilled]: (state, action) => {\r\n      state.product.loading = false\r\n      state.product.productData = action.payload\r\n      state.product.status = 'success'\r\n    },\r\n    [getProduct.rejected]: (state, action) => {\r\n      state.product.loading = false\r\n      state.product.status = 'failed'\r\n      // state.product.error = action.error\r\n    },\r\n  },\r\n})\r\n\r\nexport default productListSlice.reducer\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  baseURL: '/api/',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n})\r\n\r\nexport default instance\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport useAxios from '../apis/axios.instance'\r\nconst initialState = {\r\n  cart: [],\r\n  loading: false,\r\n  error: null,\r\n  totalPrice: 0,\r\n}\r\n\r\nexport const getProductsFromUserCart = createAsyncThunk(\r\n  'cart/getProducts',\r\n  async (_, { rejectWithValue, getState }) => {\r\n    const {\r\n      userData: { userId, token },\r\n    } = getState().userList\r\n    try {\r\n      useAxios.defaults.headers.common['Authorization'] = `Bearer ${token}`\r\n      const { data } = await useAxios.post(`/cart`, { userId })\r\n      return data\r\n    } catch (err) {\r\n      return rejectWithValue(err.response.status)\r\n    }\r\n  }\r\n)\r\nexport const adjustProductInUserCart = createAsyncThunk(\r\n  'cart/adjustProduct',\r\n  async (adjustData, { rejectWithValue, getState }) => {\r\n    const {\r\n      userData: { userId, token },\r\n    } = getState().userList\r\n    try {\r\n      useAxios.defaults.headers.common['Authorization'] = `Bearer ${token}`\r\n      const { data } = await useAxios.put(`/cart`, { adjustData, userId })\r\n      return data\r\n    } catch (err) {\r\n      return rejectWithValue(err.response.status)\r\n    }\r\n  }\r\n)\r\nexport const updateUserCart = createAsyncThunk(\r\n  'cartSlice/mergeCartToUserCart',\r\n  async (cart, { rejectWithValue, getState }) => {\r\n    const {\r\n      userData: { userId, token },\r\n    } = getState().userList\r\n    try {\r\n      useAxios.defaults.headers.common['Authorization'] = `Bearer ${token}`\r\n      const { data } = await useAxios.patch(`/cart`, { userId, cart })\r\n      return data\r\n    } catch (err) {\r\n      return rejectWithValue(err.response.status)\r\n    }\r\n  }\r\n)\r\n\r\nexport const cartSlice = createSlice({\r\n  name: 'cartList',\r\n  initialState,\r\n  reducers: {\r\n    adjustCart: (state, { payload }) => {\r\n      const { _id, name, price, image, opr } = payload\r\n      const index = state.cart.findIndex((item) => item._id.toString() === _id)\r\n      if (index === -1 && opr === 'ADD') {\r\n        state.cart.unshift({\r\n          name,\r\n          image,\r\n          price,\r\n          _id,\r\n          quantity: 1,\r\n        })\r\n        state.totalPrice += price\r\n      }\r\n      if (opr === 'INC' || (opr === 'ADD' && index !== -1)) {\r\n        state.cart[index].quantity += 1\r\n        state.totalPrice += state.cart[index].price\r\n      } else if (opr === 'DEC') {\r\n        if (state.cart[index].quantity > 1) {\r\n          state.cart[index].quantity -= 1\r\n          state.totalPrice -= state.cart[index].price\r\n        } else {\r\n          state.cart[index].quantity = 1\r\n        }\r\n      } else if (opr === 'DEL') {\r\n        state.totalPrice -= state.cart[index].price * state.cart[index].quantity\r\n        state.cart.splice(index, 1)\r\n      }\r\n      state.totalPrice = parseFloat(state.totalPrice.toFixed(2))\r\n    },\r\n    clearCart: (state) => initialState,\r\n  },\r\n  extraReducers: {\r\n    [updateUserCart.pending]: (state) => {\r\n      state.loading = true\r\n      state.error = null\r\n    },\r\n    [updateUserCart.fulfilled]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.cart = payload.cart\r\n      state.totalPrice = parseFloat(payload.totalPrice)\r\n    },\r\n    [updateUserCart.rejected]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.error = payload\r\n    },\r\n    [getProductsFromUserCart.pending]: (state) => {\r\n      state.loading = true\r\n      state.error = null\r\n    },\r\n    [getProductsFromUserCart.fulfilled]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.cart = payload\r\n    },\r\n    [getProductsFromUserCart.rejected]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.error = payload\r\n    },\r\n    [adjustProductInUserCart.pending]: (state) => {\r\n      state.loading = true\r\n      state.error = null\r\n    },\r\n    [adjustProductInUserCart.fulfilled]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.cart = payload.cart\r\n      state.totalPrice = parseFloat(payload.totalPrice)\r\n    },\r\n    [adjustProductInUserCart.rejected]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.error = payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const adjustCartCheck =\r\n  (_id, image, price, name, opr) => (dispatch, getState) => {\r\n    const { userData } = getState().userList\r\n    if (!userData.token) {\r\n      dispatch(adjustCart({ _id, image, price, name, opr }))\r\n    } else {\r\n      dispatch(adjustProductInUserCart({ _id, opr }))\r\n    }\r\n  }\r\n\r\nexport const { adjustCart, clearCart } = cartSlice.actions\r\n\r\nexport default cartSlice.reducer\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport useAxios from '../apis/axios.instance'\r\nimport { clearCart } from './cartSlice'\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  userData: {},\r\n  userProfile: {},\r\n  userAddresses: [],\r\n  error: null,\r\n  status: 'idle',\r\n}\r\nexport const admission = createAsyncThunk(\r\n  'user/login',\r\n  async (userInfo, { rejectWithValue }) => {\r\n    let route = ''\r\n    if (!userInfo.name) {\r\n      route = 'login'\r\n    }\r\n    try {\r\n      const { data } = await useAxios.post(`users/${route}`, userInfo)\r\n      return data\r\n    } catch (err) {\r\n      console.log(err)\r\n      return rejectWithValue(err.response.data.message)\r\n    }\r\n  }\r\n)\r\nexport const getProfile = createAsyncThunk(\r\n  'user/profile',\r\n  async (_, { getState, rejectWithValue }) => {\r\n    const { userId, token } = getState().userList.userData\r\n    try {\r\n      useAxios.defaults.headers.common['Authorization'] = `Bearer ${token}`\r\n      const { data } = await useAxios.post(`/users/profile`, { userId })\r\n      return data\r\n    } catch (err) {\r\n      return rejectWithValue(err.response.message)\r\n    }\r\n  }\r\n)\r\nexport const updateUserProfile = createAsyncThunk(\r\n  'user/updateProfile',\r\n  async (updateData, { getState, rejectWithValue }) => {\r\n    const { userId, token } = getState().userList.userData\r\n    try {\r\n      useAxios.defaults.headers.common['Authorization'] = `Bearer ${token}`\r\n      const { data } = await useAxios.put(`/users/profile`, {\r\n        updateData,\r\n        userId,\r\n      })\r\n      return data\r\n    } catch (err) {\r\n      console.log(err)\r\n      return rejectWithValue(err.response.data.message)\r\n    }\r\n  }\r\n)\r\nexport const getUserAddresses = createAsyncThunk(\r\n  'user/getAddresses',\r\n  async (_, { getState, rejectWithValue }) => {\r\n    const { userId, token } = getState().userList.userData\r\n    try {\r\n      useAxios.defaults.headers.common['Authorization'] = `Bearer ${token}`\r\n      const { data } = await useAxios.post(`/users/profile/addresses`, {\r\n        userId,\r\n      })\r\n      return data\r\n    } catch (err) {\r\n      return rejectWithValue(err.response.message)\r\n    }\r\n  }\r\n)\r\nexport const updateUserAddresses = createAsyncThunk(\r\n  'user/updateAddresses',\r\n  async (addressData, { getState, rejectWithValue }) => {\r\n    const { userId, token } = getState().userList.userData\r\n    try {\r\n      useAxios.defaults.headers.common['Authorization'] = `Bearer ${token}`\r\n      const { data } = await useAxios.put(`/users/profile/addresses`, {\r\n        userId,\r\n        addressData,\r\n      })\r\n      return data\r\n    } catch (err) {\r\n      return rejectWithValue(err.response.data.message)\r\n    }\r\n  }\r\n)\r\nexport const userSlice = createSlice({\r\n  name: 'productList',\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => initialState,\r\n    clearError: (state) => {\r\n      state.error = null\r\n    },\r\n    resetStatus: (state) => {\r\n      state.status = 'idle'\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [admission.pending]: (state) => {\r\n      state.loading = true\r\n      state.error = null\r\n    },\r\n    [admission.fulfilled]: (state, action) => {\r\n      state.loading = false\r\n      state.userData = action.payload\r\n      state.error = null\r\n    },\r\n    [admission.rejected]: (state, action) => {\r\n      state.loading = false\r\n      state.error = action.payload\r\n    },\r\n    [getProfile.pending]: (state) => {\r\n      state.loading = true\r\n      state.error = null\r\n    },\r\n    [getProfile.fulfilled]: (state, action) => {\r\n      state.loading = false\r\n      state.userProfile = action.payload\r\n      state.error = null\r\n    },\r\n    [getProfile.rejected]: (state, action) => {\r\n      state.loading = false\r\n      state.error = action.payload\r\n    },\r\n    [updateUserProfile.pending]: (state) => {\r\n      state.loading = true\r\n      state.error = null\r\n      state.status = 'idle'\r\n    },\r\n    [updateUserProfile.fulfilled]: (state, action) => {\r\n      state.loading = false\r\n      state.userProfile = action.payload\r\n      state.status = 'success'\r\n      state.error = null\r\n    },\r\n    [updateUserProfile.rejected]: (state, action) => {\r\n      state.loading = false\r\n      state.status = 'failed'\r\n      state.error = action.payload\r\n    },\r\n    [getUserAddresses.pending]: (state) => {\r\n      state.loading = true\r\n      state.error = null\r\n    },\r\n    [getUserAddresses.fulfilled]: (state, action) => {\r\n      state.loading = false\r\n      state.userAddresses = action.payload\r\n      state.error = null\r\n    },\r\n    [getUserAddresses.rejected]: (state, action) => {\r\n      state.loading = false\r\n      state.error = action.payload\r\n    },\r\n    [updateUserAddresses.pending]: (state) => {\r\n      state.loading = true\r\n      state.error = null\r\n      state.status = 'idle'\r\n    },\r\n    [updateUserAddresses.fulfilled]: (state, action) => {\r\n      state.loading = false\r\n      state.userAddresses = action.payload\r\n      state.status = 'success'\r\n      state.error = null\r\n    },\r\n    [updateUserAddresses.rejected]: (state, action) => {\r\n      state.loading = false\r\n      state.status = 'failed'\r\n      state.error = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const { reset, clearError, resetStatus } = userSlice.actions\r\n\r\nexport const logOut = () => (dispatch) => {\r\n  dispatch(reset())\r\n  dispatch(clearCart())\r\n}\r\n\r\nexport default userSlice.reducer\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport useAxios from '../apis/axios.instance'\r\n\r\nconst initialState = {\r\n  orders: [],\r\n  loading: false,\r\n  error: null,\r\n  status: 'idle',\r\n}\r\n\r\nexport const placeOrder = createAsyncThunk(\r\n  'orderSlice/placeOrder',\r\n  async (_, { rejectWithValue, getState }) => {\r\n    const {\r\n      userData: { userId, token },\r\n    } = getState().userList\r\n    try {\r\n      useAxios.defaults.headers.common['Authorization'] = `Bearer ${token}`\r\n      const { data } = await useAxios.put(`/orders`, { userId })\r\n      return data\r\n    } catch (err) {\r\n      return rejectWithValue(err.response.status)\r\n    }\r\n  }\r\n)\r\nexport const getUserOrders = createAsyncThunk(\r\n  'orderSlice/getUserOrders',\r\n  async (_, { rejectWithValue, getState }) => {\r\n    const {\r\n      userData: { userId, token },\r\n    } = getState().userList\r\n    try {\r\n      useAxios.defaults.headers.common['Authorization'] = `Bearer ${token}`\r\n      const { data } = await useAxios.post(`/orders`, { userId })\r\n      return data\r\n    } catch (err) {\r\n      return rejectWithValue(err.response.status)\r\n    }\r\n  }\r\n)\r\n\r\nexport const orderSlice = createSlice({\r\n  name: 'orderList',\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => initialState,\r\n  },\r\n  extraReducers: {\r\n    [placeOrder.pending]: (state) => {\r\n      state.loading = true\r\n      state.error = null\r\n      state.status = 'idle'\r\n    },\r\n    [placeOrder.fulfilled]: (state) => {\r\n      state.loading = false\r\n      state.status = 'success'\r\n    },\r\n    [placeOrder.rejected]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.status = 'failed'\r\n      state.error = payload\r\n    },\r\n    [getUserOrders.pending]: (state) => {\r\n      state.loading = true\r\n      state.error = null\r\n    },\r\n    [getUserOrders.fulfilled]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.orders = payload\r\n    },\r\n    [getUserOrders.rejected]: (state, { payload }) => {\r\n      state.loading = false\r\n      state.error = payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const { reset } = orderSlice.actions\r\n\r\nexport default orderSlice.reducer\r\n","import { configureStore, combineReducers } from '@reduxjs/toolkit'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { persistReducer } from 'redux-persist'\r\n\r\nimport productReducer from './slices/productSlice'\r\nimport cartReducer from './slices/cartSlice'\r\nimport userReducer from './slices/userSlice'\r\nimport orderReducer from './slices/orderSlice'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst reducer = combineReducers({\r\n  productsList: productReducer,\r\n  cartList: cartReducer,\r\n  userList: userReducer,\r\n  orderList: orderReducer,\r\n})\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer)\r\n\r\nexport default configureStore({\r\n  reducer: persistedReducer,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  middleware: [thunk],\r\n})\r\n","import React from 'react'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { logOut } from '../slices/userSlice'\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch()\r\n  const cart = useSelector((state) => state.cartList.cart)\r\n  const { name } = useSelector((state) => state.userList.userData)\r\n  let history = useHistory()\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logOut())\r\n    history.push('/')\r\n  }\r\n  return (\r\n    <header>\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>OgShop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"ml-auto\">\r\n              <LinkContainer to={`/cart`}>\r\n                <Nav.Link>\r\n                  {cart.length > 0 && (\r\n                    <span className=\"badge badge-pill badge-warning\">\r\n                      {cart.reduce((acc, crnt) => acc + crnt.quantity, 0)}\r\n                    </span>\r\n                  )}{' '}\r\n                  <i className=\"fas fa-shopping-cart mr-2\"></i>\r\n                  Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {name ? (\r\n                <NavDropdown title={name} id=\"username\">\r\n                  <LinkContainer to=\"/profile/info\">\r\n                    <NavDropdown.Item>\r\n                      <i className=\"fas fa-user mr-2\" /> Profile\r\n                    </NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/profile/addresses\">\r\n                    <NavDropdown.Item>\r\n                      <i className=\"fas fa-map-marker mr-2\" /> Addresses\r\n                    </NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/profile/orders\">\r\n                    <NavDropdown.Item>\r\n                      <i className=\"fas fa-box mr-2\" /> Orders\r\n                    </NavDropdown.Item>\r\n                  </LinkContainer>\r\n\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    <i className=\"fas fa-sign-out-alt mr-2\" />\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link>\r\n                    <i className=\"fas fa-user mx-2\" /> Login\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center py-3\">Copyright &copy; OgShop</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst Rating = ({ color, rating, review }) => {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span>\r\n        {[1, 2, 3, 4, 5].map((index) => (\r\n          <i\r\n            key={index}\r\n            style={{ color }}\r\n            className={\r\n              rating >= index\r\n                ? 'fas fa-star'\r\n                : rating >= index - 0.5\r\n                ? 'fas fa-star-half-alt'\r\n                : 'far fa-star'\r\n            }\r\n          ></i>\r\n        ))}\r\n      </span>{' '}\r\n      <span>{review && review + ' Reviews'}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nRating.defaultProps = {\r\n  color: '#ffdf00 ',\r\n  rating: 0,\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Product = ({ product }) => {\r\n  const { _id, name, rating, numReviews, price, image } = product\r\n  return (\r\n    <Card className=\"my-3 p-3 rounded\">\r\n      <Link to={`/product/${_id}`}>\r\n        <Card.Img src={image} />\r\n      </Link>\r\n      <Card.Body>\r\n        <Link to={`/product/${_id}`}>\r\n          <Card.Title as=\"div\">\r\n            <strong>{name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n        <Card.Text as=\"div\">\r\n          <Rating rating={rating} review={numReviews} />\r\n        </Card.Text>\r\n        <Card.Text as=\"h3\">${price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      style={{\r\n        height: '100px',\r\n        width: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}\r\n    >\r\n      {' '}\r\n      <span className=\"sr-only\"> Loading...</span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col, Alert } from 'react-bootstrap'\r\nimport Product from '../components/Product/Product'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAllProducts } from '../slices/productSlice'\r\nimport Loader from '../components/Loader'\r\nimport { reset } from '../slices/orderSlice'\r\n\r\nconst HomeScreen = () => {\r\n  const { productsData, error, loading } = useSelector(\r\n    (state) => state.productsList.products\r\n  )\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(getAllProducts())\r\n    dispatch(reset())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Alert variant=\"danger\">{error.message}</Alert>\r\n      ) : (\r\n        <Row>\r\n          {productsData.map((product) => (\r\n            <Col sm={12} md={6} lg={4} xl={3} key={product._id}>\r\n              <Product product={product} />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useEffect } from 'react'\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Button,\r\n  Alert,\r\n  Spinner,\r\n} from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Rating from '../components/Product/Rating'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProduct } from '../slices/productSlice'\r\nimport { adjustCartCheck } from '../slices/cartSlice'\r\nimport Loader from '../components/Loader'\r\n\r\nconst ProductScreen = ({ match }) => {\r\n  const _id = match.params.id\r\n  const dispatch = useDispatch()\r\n  const { productData, loading, error } = useSelector(\r\n    (state) => state.productsList.product\r\n  )\r\n  const cartLoading = useSelector((state) => state.cartList.loading)\r\n\r\n  const { image, name, numReviews, rating, price, description, countInStock } =\r\n    productData\r\n\r\n  useEffect(() => {\r\n    dispatch(getProduct(_id))\r\n  }, [dispatch, _id])\r\n\r\n  return (\r\n    <>\r\n      <Link className=\"btn btn-light my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Alert variant=\"danger\">{error.message}</Alert>\r\n      ) : (\r\n        <Row>\r\n          <Col md={6}>\r\n            <Image src={image} alt={name} fluid />\r\n          </Col>\r\n          <Col md={3}>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h3>{name}</h3>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Rating rating={rating} review={numReviews} />\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>{description}</ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={3}>\r\n            <ListGroup className=\"text-center\">\r\n              <ListGroup.Item>\r\n                Price : <strong> ${price}</strong>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  variant={countInStock === 0 ? 'danger' : 'outline-success'}\r\n                  type=\"button\"\r\n                  disabled={countInStock === 0}\r\n                  block\r\n                  onClick={() => {\r\n                    dispatch(adjustCartCheck(_id, image, price, name, 'ADD'))\r\n                  }}\r\n                >\r\n                  {cartLoading ? (\r\n                    <Spinner\r\n                      as=\"span\"\r\n                      animation=\"border\"\r\n                      size=\"sm\"\r\n                      role=\"status\"\r\n                      aria-hidden=\"true\"\r\n                    />\r\n                  ) : (\r\n                    'ADD TO CART'\r\n                  )}\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductScreen\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Button } from 'react-bootstrap'\r\nimport { adjustCartCheck } from '../../slices/cartSlice'\r\nconst CartItem = ({ cart }) => {\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <ListGroup>\r\n      {cart.map((item) => (\r\n        <ListGroup.Item key={item._id}>\r\n          <Row>\r\n            <Col md={3}>\r\n              <Image src={item.image} alt={item.name} fluid rounded />\r\n            </Col>\r\n            <Col md={3} className=\"my-auto\">\r\n              <Link to={`/product/${item._id}`}>{item.name}</Link>\r\n            </Col>\r\n            <Col md={2} className=\"my-auto\">\r\n              {item.price} $\r\n            </Col>\r\n\r\n            <Col md={3} className=\"my-auto\">\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"light\"\r\n                className=\"mr-3\"\r\n                value=\"DEC\"\r\n                onClick={() =>\r\n                  dispatch(\r\n                    adjustCartCheck(\r\n                      item._id,\r\n                      item.image,\r\n                      item.price,\r\n                      item.name,\r\n                      'DEC'\r\n                    )\r\n                  )\r\n                }\r\n              >\r\n                <i className=\"fas fa-minus\"></i>\r\n              </Button>\r\n              <span className=\"font-weight-bold\">{item.quantity}</span>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"light\"\r\n                className=\"ml-3\"\r\n                onClick={() =>\r\n                  dispatch(\r\n                    adjustCartCheck(\r\n                      item._id,\r\n                      item.image,\r\n                      item.price,\r\n                      item.name,\r\n                      'INC'\r\n                    )\r\n                  )\r\n                }\r\n              >\r\n                <i className=\"fas fa-plus\"></i>\r\n              </Button>\r\n            </Col>\r\n            <Col md={1} className=\"my-auto\">\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"light\"\r\n                onClick={() =>\r\n                  dispatch(\r\n                    adjustCartCheck(\r\n                      item._id,\r\n                      item.image,\r\n                      item.name,\r\n                      item.price,\r\n                      'DEL'\r\n                    )\r\n                  )\r\n                }\r\n              >\r\n                <i className=\"fas fa-trash \"></i>\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </ListGroup.Item>\r\n      ))}\r\n    </ListGroup>\r\n  )\r\n}\r\n\r\nexport default CartItem\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Button } from 'react-bootstrap'\r\nimport Loader from '../Loader'\r\n\r\nconst OrderSummary = ({ cart, totalPrice, shipping }) => {\r\n  const { loading } = useSelector((state) => state.cartList)\r\n  return (\r\n    <ListGroup>\r\n      <ListGroup.Item>\r\n        <Button\r\n          href={shipping ? (cart.length === 0 ? '/' : '/cart') : '/'}\r\n          type=\"button\"\r\n          className=\"btn-block\"\r\n          variant={cart.length === 0 ? 'success' : 'outline-success'}\r\n        >\r\n          {`BACK TO ${\r\n            shipping ? (cart.length === 0 ? 'SHOPPING' : 'CART') : 'SHOPPING'\r\n          }`}\r\n        </Button>\r\n      </ListGroup.Item>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          {cart.map((item) => (\r\n            <ListGroup.Item key={item._id}>\r\n              <Row>\r\n                <Col md={6} className=\"text-center my-auto\">\r\n                  {item.name}\r\n                </Col>\r\n                <Col md={2} className=\"text-center my-auto\">\r\n                  x {item.quantity}\r\n                </Col>\r\n                <Col\r\n                  md={4}\r\n                  className=\"text-center bg-light border rounded text-center my-auto\"\r\n                >\r\n                  {(item.price * item.quantity).toFixed(2)}$\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n          ))}\r\n\r\n          <ListGroup.Item className=\"text-center\">\r\n            {totalPrice === 0 ? (\r\n              <i className=\"fas fa-shopping-bag fa-9x\"></i>\r\n            ) : (\r\n              <h2>Total : {totalPrice}$ </h2>\r\n            )}\r\n          </ListGroup.Item>\r\n        </>\r\n      )}\r\n      {cart.length > 0 && !shipping ? (\r\n        <ListGroup.Item>\r\n          <Button\r\n            href={'/placeorder'}\r\n            type=\"button\"\r\n            className=\"btn-block\"\r\n            variant={cart.length === 0 ? 'warning' : 'outline-info'}\r\n          >\r\n            {`${shipping ? 'ORDER SUMMARY' : 'CHECKOUT'}`}\r\n          </Button>\r\n        </ListGroup.Item>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </ListGroup>\r\n  )\r\n}\r\n\r\nexport default OrderSummary\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Alert } from 'react-bootstrap'\r\nimport { getProductsFromUserCart } from '../slices/cartSlice'\r\nimport Items from '../components/Cart/Items'\r\nimport OrderSummary from '../components/Cart/OrderSummary'\r\n\r\nconst CartScreen = () => {\r\n  const dispatch = useDispatch()\r\n  const { cart, totalPrice } = useSelector((state) => state.cartList)\r\n  const { userData } = useSelector((state) => state.userList)\r\n\r\n  useEffect(() => {\r\n    if (userData.token) {\r\n      dispatch(getProductsFromUserCart())\r\n    }\r\n  }, [dispatch, userData])\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col md={12}>\r\n          <h2>Your Cart</h2>\r\n          <br />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={8}>\r\n          {cart.length === 0 ? (\r\n            <Alert variant=\"info\">Your cart is empty.</Alert>\r\n          ) : (\r\n            <Items cart={cart} />\r\n          )}\r\n        </Col>\r\n        <Col md={4} className=\"my-auto\">\r\n          <OrderSummary cart={cart} totalPrice={totalPrice} />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CartScreen\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Col, Row, Container, Form, Button, Alert } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { admission, clearError } from '../slices/userSlice'\r\nimport { updateUserCart } from '../slices/cartSlice'\r\n\r\nconst LoginScreen = ({ history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  const { error, loading, userData } = useSelector((state) => state.userList)\r\n  const { cart } = useSelector((state) => state.cartList)\r\n\r\n  useEffect(() => {\r\n    if (userData.token) {\r\n      dispatch(updateUserCart(cart))\r\n      history.push('/')\r\n    }\r\n    dispatch(clearError())\r\n  }, [history, userData, dispatch, cart])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(admission({ email, password }))\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          <h2>Log In</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          {loading ? (\r\n            <Loader />\r\n          ) : (\r\n            <>\r\n              <p>\r\n                <i>\r\n                  Please enter your account details to log in to your user\r\n                  account.\r\n                </i>\r\n              </p>\r\n              <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"email\">\r\n                  <Form.Label>Email address</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                  <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                  </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"password\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    minLength=\"6\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Login\r\n                </Button>\r\n              </Form>\r\n              <br />\r\n              <i>\r\n                New Customer ? <Link to={'/register'}>Register</Link>\r\n              </i>\r\n            </>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Container, Alert } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport { admission, clearError } from '../slices/userSlice'\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [passwordCheck, setPasswordCheck] = useState(true)\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n  const { error, loading, userData } = useSelector((state) => state.userList)\r\n\r\n  useEffect(() => {\r\n    if (userData.token) {\r\n      history.push('/')\r\n    } else {\r\n      dispatch(clearError())\r\n    }\r\n  }, [dispatch, history, userData.token])\r\n\r\n  const submitHandler = (e) => {\r\n    e.prevent.default()\r\n    dispatch(admission({ name, email, password }))\r\n  }\r\n\r\n  const passwordCheckHandler = (psw) => {\r\n    setConfirmPassword(psw)\r\n    if (psw.length === password.length) {\r\n      if (psw !== password) {\r\n        setMessage('Passwords do not match.')\r\n        setPasswordCheck(true)\r\n      } else {\r\n        setMessage(null)\r\n        setPasswordCheck(false)\r\n      }\r\n    } else {\r\n      setPasswordCheck(true)\r\n    }\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          <h1>Sign Up</h1>\r\n          {message && <Alert variant=\"danger\">{message}</Alert>}\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          {loading ? (\r\n            <Loader />\r\n          ) : (\r\n            <>\r\n              <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId=\"name\">\r\n                  <Form.Label>Name</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    type=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"email\">\r\n                  <Form.Label>Email Address</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"password\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    type=\"password\"\r\n                    placeholder=\"Enter password\"\r\n                    value={password}\r\n                    minLength=\"6\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"confirmPassword\">\r\n                  <Form.Label>Confirm Password</Form.Label>\r\n                  <Form.Control\r\n                    required\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    value={confirmPassword}\r\n                    minLength=\"6\"\r\n                    onChange={(e) => passwordCheckHandler(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant={passwordCheck ? 'danger' : 'success'}\r\n                  disabled={passwordCheck}\r\n                >\r\n                  Register\r\n                </Button>\r\n              </Form>\r\n\r\n              <Row className=\"py-3\">\r\n                <Col>\r\n                  Have an Account ? <Link to={'/login'}>Login</Link>\r\n                </Col>\r\n              </Row>\r\n            </>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Form,\r\n  Button,\r\n  ListGroupItem,\r\n  Row,\r\n  Col,\r\n  Spinner,\r\n  Alert,\r\n} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  clearError,\r\n  resetStatus,\r\n  updateUserProfile,\r\n} from '../../../slices/userSlice'\r\n\r\nconst UserInfoForm = ({ profile }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [currentPassword, setCurrentPassword] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [passwordCheck, setPasswordCheck] = useState(true)\r\n  const [message, setMessage] = useState(null)\r\n  const [result, setResult] = useState(false)\r\n  const [errorResult, setErrorResult] = useState(false)\r\n  const dispatch = useDispatch()\r\n  const { loading, status, error } = useSelector((state) => state.userList)\r\n\r\n  useEffect(() => {\r\n    statusCheck()\r\n  })\r\n\r\n  const statusCheck = () => {\r\n    if (status === 'success') {\r\n      dispatch(resetStatus())\r\n      setResult(true)\r\n      setMessage('Successfully Updated!')\r\n      setTimeout(() => {\r\n        setResult(false)\r\n        setMessage(null)\r\n      }, 2000)\r\n    } else if (error) {\r\n      dispatch(clearError())\r\n      setErrorResult(true)\r\n      setMessage(error)\r\n      setTimeout(() => {\r\n        setErrorResult(false)\r\n        setMessage(null)\r\n      }, 2000)\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      updateUserProfile({\r\n        name,\r\n        email,\r\n        currentPassword,\r\n        password,\r\n        opr: profile ? 'INF' : 'PSW',\r\n      })\r\n    )\r\n  }\r\n  const passwordCheckHandler = (psw) => {\r\n    setConfirmPassword(psw)\r\n    if (psw.length === password.length) {\r\n      if (psw !== password) {\r\n        setMessage('Passwords do not match.')\r\n        setPasswordCheck(true)\r\n      } else {\r\n        setMessage(null)\r\n        setPasswordCheck(false)\r\n      }\r\n    } else {\r\n      setPasswordCheck(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler}>\r\n      {profile ? (\r\n        <ListGroupItem>\r\n          <Row>\r\n            <Col>\r\n              <Form.Group controlId=\"name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"name\"\r\n                  placeholder=\"Enter name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlId=\"email\">\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Col className=\"text-right\">\r\n            <Button\r\n              type=\"submit\"\r\n              variant={\r\n                name.length === 0 || email.length === 0\r\n                  ? 'danger'\r\n                  : 'outline-success'\r\n              }\r\n              disabled={name.length === 0 || email.length === 0}\r\n            >\r\n              {loading ? (\r\n                <Spinner\r\n                  as=\"span\"\r\n                  animation=\"border\"\r\n                  size=\"sm\"\r\n                  role=\"status\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              ) : (\r\n                'Update'\r\n              )}\r\n            </Button>\r\n          </Col>\r\n        </ListGroupItem>\r\n      ) : (\r\n        <ListGroupItem>\r\n          <Row>\r\n            <Col>\r\n              <Form.Group controlId=\"currentPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={currentPassword}\r\n                  required\r\n                  onChange={(e) => setCurrentPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlId=\"password\">\r\n                <Form.Label>New Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  value={password}\r\n                  minLength=\"6\"\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlId=\"confirmPassword\">\r\n                <Form.Label>Confirm New Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm password\"\r\n                  minLength=\"6\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => passwordCheckHandler(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Col className=\"text-right\">\r\n            <Button\r\n              type=\"submit\"\r\n              variant={passwordCheck ? 'danger' : 'outline-success'}\r\n              disabled={passwordCheck}\r\n            >\r\n              {loading ? (\r\n                <Spinner\r\n                  as=\"span\"\r\n                  animation=\"border\"\r\n                  size=\"sm\"\r\n                  role=\"status\"\r\n                  aria-hidden=\"true\"\r\n                />\r\n              ) : (\r\n                'Update'\r\n              )}\r\n            </Button>\r\n          </Col>\r\n        </ListGroupItem>\r\n      )}\r\n      {(result || errorResult) && (\r\n        <Alert variant={errorResult ? 'danger' : 'success'} transition>\r\n          {message}\r\n        </Alert>\r\n      )}\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default UserInfoForm\r\n","import React, { useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Accordion } from 'react-bootstrap'\r\nimport { getProfile } from '../../../slices/userSlice'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../../Loader'\r\n\r\nconst UserInfo = () => {\r\n  const dispatch = useDispatch()\r\n  const { userProfile, loading } = useSelector((state) => state.userList)\r\n  const { name, email } = userProfile\r\n\r\n  useEffect(() => {\r\n    dispatch(getProfile())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <ListGroup.Item>\r\n          <Row className=\"d-flex justify-content-between\">\r\n            <Col className=\"text-center\">\r\n              <i className=\"far fa-id-card fa-9x\" />\r\n            </Col>\r\n            <Col className=\"my-auto\">\r\n              <Row className=\"pl-3\">\r\n                <b>Name</b>\r\n              </Row>\r\n              <Row className=\"mt-3 pl-3\">\r\n                <i>{name}</i>\r\n              </Row>\r\n            </Col>\r\n            <Col className=\"my-auto\">\r\n              <Row className=\"pl-3\">\r\n                <b>Email</b>\r\n              </Row>\r\n              <Row className=\"mt-3 pl-3\">\r\n                <i>{email}</i>\r\n              </Row>\r\n            </Col>\r\n            <Col className=\"my-auto text-right\">\r\n              <Accordion.Toggle as={Button} variant=\"light\" eventKey=\"0\">\r\n                <i className=\"fas fa-pen mr-2\" />\r\n                Update Details{' '}\r\n              </Accordion.Toggle>\r\n              <Accordion.Toggle\r\n                as={Button}\r\n                variant=\"light\"\r\n                eventKey=\"1\"\r\n                className=\"mt-3\"\r\n              >\r\n                <i className=\"fas fa-key mr-2\" />\r\n                Change Password\r\n              </Accordion.Toggle>\r\n            </Col>\r\n          </Row>\r\n        </ListGroup.Item>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserInfo\r\n","import React from 'react'\r\nimport { Row, Col, Container, Accordion } from 'react-bootstrap'\r\n\r\nimport UserInfoForm from '../components/Profile/Info/UserInfoForm'\r\nimport UserInfo from '../components/Profile/Info/UserInfo'\r\n\r\nconst ProfileScreen = () => {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <h2>Your Details</h2>\r\n          <p>\r\n            <i>\r\n              View and update your details right here. Manage your login options\r\n              and passwords here.\r\n            </i>\r\n          </p>\r\n\r\n          <Accordion>\r\n            <UserInfo />\r\n            <Accordion.Collapse eventKey=\"0\" className=\"mb-3\">\r\n              <UserInfoForm profile />\r\n            </Accordion.Collapse>\r\n            <Accordion.Collapse eventKey=\"1\" className=\"mb-3\">\r\n              <UserInfoForm />\r\n            </Accordion.Collapse>\r\n          </Accordion>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserOrders, reset } from '../slices/orderSlice'\r\nimport { Row, Col, Alert, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst OrdersScreen = () => {\r\n  const dispatch = useDispatch()\r\n  const { orders, loading, error } = useSelector((state) => state.orderList)\r\n  useEffect(() => {\r\n    dispatch(reset())\r\n    dispatch(getUserOrders())\r\n  }, [dispatch])\r\n  return (\r\n    <Row>\r\n      <Col md={12}>\r\n        <h2>Your Orders</h2>\r\n        <br />\r\n      </Col>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Alert variant=\"danger\">{error}</Alert>\r\n      ) : (\r\n        <Col md={12}>\r\n          {orders.length === 0 ? (\r\n            <Alert variant=\"info\">\r\n              You don't have any orders yet.{' '}\r\n              <Link to={`/`}>Start Shopping</Link>{' '}\r\n            </Alert>\r\n          ) : (\r\n            orders.map((order) => (\r\n              <Card className=\"mb-3\" key={order._id}>\r\n                <Card.Header className=\"d-flex justify-content-center text-center\">\r\n                  <Col>\r\n                    <b>Time</b>\r\n                    <br />\r\n                    {new Date(order.createdAt).toLocaleDateString(undefined, {\r\n                      month: 'short',\r\n                      day: 'numeric',\r\n                      hour: '2-digit',\r\n                      minute: '2-digit',\r\n                    })}\r\n                  </Col>\r\n                  <Col>\r\n                    <b>Order Summary</b>\r\n                    <br />\r\n                    {order.orderItems.length} Product\r\n                  </Col>\r\n                  <Col>\r\n                    <b>Person</b>\r\n                    <br />\r\n                    {order.deliveryAddress.firstName}{' '}\r\n                    {order.deliveryAddress.lastName}\r\n                  </Col>\r\n                  <Col>\r\n                    <b>Total Price</b>\r\n                    <br />\r\n                    {order.totalPrice} $\r\n                  </Col>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  {order.orderItems.map((item) => (\r\n                    <ListGroup.Item key={item._id}>\r\n                      <Row className=\"d-flex justify-content-center text-center\">\r\n                        <Col className=\"my-auto\">\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                            style={{ maxHeight: '50px' }}\r\n                          />\r\n                        </Col>\r\n                        <Col className=\"my-auto\">\r\n                          <Link to={`/product/${item._id}`}>{item.name}</Link>\r\n                        </Col>\r\n                        <Col className=\"my-auto\">\r\n                          {item.price}$ x {item.quantity}\r\n                        </Col>\r\n                        <Col className=\"my-auto\">\r\n                          {item.price * item.quantity}$\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </Card.Body>\r\n                <Card.Footer className=\"d-flex justify-content-around text-center\">\r\n                  {order.billingAddress.street ===\r\n                  order.deliveryAddress.street ? (\r\n                    <small>\r\n                      <i>\r\n                        <span className=\"text-info mr-1\">\r\n                          Delivery {`&`} Billing Address :\r\n                        </span>\r\n                        {order.deliveryAddress.street} -{' '}\r\n                        {order.deliveryAddress.postalCode} ,{' '}\r\n                        {order.deliveryAddress.city} /{' '}\r\n                        {order.deliveryAddress.country}\r\n                      </i>\r\n                    </small>\r\n                  ) : (\r\n                    <>\r\n                      <small>\r\n                        <i>\r\n                          <span className=\"text-info mr-1\">\r\n                            Delivery Address :\r\n                          </span>\r\n                          {order.deliveryAddress.street} -{' '}\r\n                          {order.deliveryAddress.postalCode} ,{' '}\r\n                          {order.deliveryAddress.city} /{' '}\r\n                          {order.deliveryAddress.country}\r\n                        </i>\r\n                      </small>\r\n                      <small>\r\n                        <i>\r\n                          <span className=\"text-info mr-1\">\r\n                            Billing Address :\r\n                          </span>\r\n                          {order.billingAddress.street} -{' '}\r\n                          {order.billingAddress.postalCode} ,{' '}\r\n                          {order.billingAddress.city} /{' '}\r\n                          {order.billingAddress.country}\r\n                        </i>\r\n                      </small>\r\n                    </>\r\n                  )}\r\n                </Card.Footer>\r\n              </Card>\r\n            ))\r\n          )}\r\n        </Col>\r\n      )}\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default OrdersScreen\r\n","import React from 'react'\r\nimport { Card, Col } from 'react-bootstrap'\r\n\r\nconst SelectedAddress = ({ address, num, scr }) => {\r\n  return (\r\n    <Col\r\n      md={num !== 2 ? (scr ? ' ' : 6) : 3}\r\n      className={num !== 2 ? 'text-center' : ''}\r\n    >\r\n      <Card>\r\n        <Card.Header>\r\n          <b>{address.title}</b>\r\n        </Card.Header>\r\n        <Card.Body style={num === 2 && scr ? { fontSize: 'small' } : {}}>\r\n          <i>\r\n            {address.firstName} {address.lastName}\r\n            <br />\r\n            {address.street.length > (scr ? 20 : 30)\r\n              ? address.street.slice(0, scr ? 15 : 29) + '...'\r\n              : address.street}\r\n            <br />\r\n            {address.postalCode} , {address.city} / {address.country}\r\n          </i>\r\n        </Card.Body>\r\n        <Card.Footer style={scr ? { padding: '0.75rem 0.75rem' } : {}}>\r\n          {(address.defaultDelivery || address.defaultBilling) && num > 1 && (\r\n            <small className=\"text-muted\">\r\n              <i className=\"fas fa-check-circle mr-1 text-success\" />\r\n              {`${scr ? '' : 'Default'} ${\r\n                address.defaultDelivery ? 'Delivery' : 'Billing'\r\n              } Address`}\r\n            </small>\r\n          )}\r\n\r\n          {num === 1 && (\r\n            <>\r\n              <small className=\"text-muted mr-5 \">\r\n                <i className=\"fas fa-check-circle mr-1 text-success\" />\r\n                {`${scr ? '' : 'Default'} Billing Address`}\r\n              </small>\r\n              <small className=\"text-muted \">\r\n                <i className=\"fas fa-check-circle mr-1 text-success\" />\r\n                {`${scr ? '' : 'Default'} Delivery Address`}\r\n              </small>\r\n            </>\r\n          )}\r\n        </Card.Footer>\r\n      </Card>\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport default SelectedAddress\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Accordion,\r\n  ListGroupItem,\r\n  Alert,\r\n} from 'react-bootstrap'\r\nimport SelectedAddress from './SelectedAddress'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Loader from '../../Loader'\r\nimport { clearError, resetStatus } from '../../../slices/userSlice'\r\n\r\nconst UserAddressInfo = ({ addresses, shipping }) => {\r\n  const [message, setMessage] = useState(null)\r\n  const [result, setResult] = useState(false)\r\n  const [errorResult, setErrorResult] = useState(false)\r\n\r\n  let filteredAddress = []\r\n  if (addresses) {\r\n    filteredAddress = addresses.filter(\r\n      (item) => item.defaultDelivery || item.defaultBilling\r\n    )\r\n  }\r\n  const { loading, status, error } = useSelector((state) => state.userList)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    statusCheck()\r\n  })\r\n\r\n  const statusCheck = () => {\r\n    if (status === 'success') {\r\n      dispatch(resetStatus())\r\n      setResult(true)\r\n      setMessage('Successfully Updated!')\r\n      setTimeout(() => {\r\n        setResult(false)\r\n        setMessage(null)\r\n      }, 2000)\r\n    } else if (error) {\r\n      dispatch(clearError())\r\n      setErrorResult(true)\r\n      setMessage(error)\r\n      setTimeout(() => {\r\n        setErrorResult(false)\r\n        setMessage(null)\r\n      }, 2000)\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      {(result || errorResult) && (\r\n        <Alert variant={errorResult ? 'danger' : 'success'} transition>\r\n          {message}\r\n        </Alert>\r\n      )}\r\n      <ListGroupItem className=\"mb-3\">\r\n        <Row className=\"d-flex justify-content-between\">\r\n          <Col className=\"my-auto text-center\">\r\n            <i className=\"fas fa-truck fa-9x\" />\r\n          </Col>\r\n          {loading ? (\r\n            <Col md={6}>\r\n              <Loader />\r\n            </Col>\r\n          ) : (\r\n            <>\r\n              {addresses && filteredAddress.length > 0 ? (\r\n                filteredAddress.map((address, index) => (\r\n                  <SelectedAddress\r\n                    address={address}\r\n                    num={filteredAddress.length}\r\n                    scr={shipping}\r\n                    key={index}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <Col\r\n                  md={6}\r\n                  className=\"my-auto text-center rounded border border-danger\"\r\n                >\r\n                  <br />\r\n                  <i>\r\n                    <p>You don’t have any saved or selected addresses yet.</p>\r\n                    <p>\r\n                      Save an address now to make checkout even faster.\r\n                    </p>{' '}\r\n                  </i>\r\n                </Col>\r\n              )}\r\n            </>\r\n          )}\r\n\r\n          <Col className=\"my-auto text-right\">\r\n            <Accordion.Toggle as={Button} variant=\"light\" eventKey=\"0\">\r\n              <i className=\"fas fa-globe-americas mr-2\" />\r\n              Add Address\r\n            </Accordion.Toggle>\r\n            <Accordion.Toggle\r\n              as={Button}\r\n              variant=\"light\"\r\n              eventKey=\"1\"\r\n              className=\"mt-3\"\r\n            >\r\n              <i className=\"fas fa-check mr-2\" />\r\n              Change Address\r\n            </Accordion.Toggle>\r\n          </Col>\r\n        </Row>\r\n      </ListGroupItem>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserAddressInfo\r\n","import React from 'react'\r\nimport { ListGroupItem, Row, Col, Button, Card } from 'react-bootstrap'\r\nimport { updateUserAddresses } from '../../../slices/userSlice'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst Addresses = ({ addresses, shipping }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const onChangeHandler = (id, opr, checked, opt) => {\r\n    dispatch(updateUserAddresses({ id, checked, opt, opr }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {addresses.map((add) => (\r\n        <ListGroupItem key={add._id}>\r\n          <Row key={add._id} className=\"d-flex justify-content-between row\">\r\n            <Col className=\"text-center my-auto\">\r\n              <span\r\n                label=\"Default Delivery Address\"\r\n                onClick={(e) => console.log(e.target.id)}\r\n              >\r\n                <i\r\n                  className={`fas fa-map-marker-alt fa-3x ${\r\n                    add.defaultDelivery ? 'text-success' : ''\r\n                  }`}\r\n                />\r\n              </span>\r\n\r\n              <i\r\n                className={`fas fa-scroll fa-3x ml-4 ${\r\n                  add.defaultBilling ? 'text-success' : ''\r\n                }`}\r\n              />\r\n            </Col>\r\n            <Col className=\"text-center my-auto\">\r\n              <Card>\r\n                <Card.Header>\r\n                  <b> {add.title}</b>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                  <i>\r\n                    {add.firstName} {add.lastName}\r\n                    <br />\r\n                    {shipping\r\n                      ? add.street.length > 20\r\n                        ? add.street.slice(0, 15) + '...'\r\n                        : add.street\r\n                      : add.street}\r\n                    <br />\r\n                    {add.postalCode} , {add.city} / {add.country}\r\n                  </i>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col className=\"text-center my-auto\">\r\n              {!add.defaultDelivery && (\r\n                <Button\r\n                  variant=\"outline-info\"\r\n                  className=\"btn btn-block my-2\"\r\n                  id={add._id}\r\n                  onClick={(e) =>\r\n                    onChangeHandler(\r\n                      e.target.id,\r\n                      'ADRC',\r\n                      true,\r\n                      'defaultDelivery'\r\n                    )\r\n                  }\r\n                >\r\n                  Set as Delivery Address\r\n                </Button>\r\n              )}\r\n              {!add.defaultBilling && (\r\n                <Button\r\n                  variant=\"outline-warning\"\r\n                  className=\"btn btn-block\"\r\n                  id={add._id}\r\n                  onClick={(e) =>\r\n                    onChangeHandler(e.target.id, 'ADRC', true, 'defaultBilling')\r\n                  }\r\n                >\r\n                  Set as Billing Address\r\n                </Button>\r\n              )}\r\n              <Button\r\n                variant=\"outline-danger\"\r\n                className=\"btn btn-block\"\r\n                id={add._id}\r\n                onClick={(e) => onChangeHandler(e.target.id, 'DEL')}\r\n              >\r\n                Delete Address\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </ListGroupItem>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Addresses\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, ListGroupItem, Row, Col, Spinner } from 'react-bootstrap'\r\nimport { updateUserAddresses } from '../../../slices/userSlice'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst ProfileAddressForm = () => {\r\n  const [title, setTitle] = useState('')\r\n  const [firstName, setFirstName] = useState('')\r\n  const [lastName, setLastName] = useState('')\r\n  const [street, setStreet] = useState('')\r\n  const [city, setCity] = useState('')\r\n  const [postalCode, setPostalCode] = useState('')\r\n  const [country, setCountry] = useState('')\r\n\r\n  const { loading } = useSelector((state) => state.userList)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      updateUserAddresses({\r\n        opr: 'ADR',\r\n        title,\r\n        firstName,\r\n        lastName,\r\n        street,\r\n        city,\r\n        postalCode,\r\n        country,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler}>\r\n      <ListGroupItem>\r\n        <Row>\r\n          <Col>\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Label>Add a Address Title</Form.Label>\r\n              <Form.Control\r\n                type=\"title\"\r\n                placeholder=\"Address Title\"\r\n                maxLength=\"10\"\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId=\"firstName\">\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"First Name\"\r\n                required\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId=\"lastName\">\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control\r\n                type=\"lastName\"\r\n                placeholder=\"Last Name\"\r\n                value={lastName}\r\n                onChange={(e) => setLastName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Form.Group controlId=\"street\">\r\n              <Form.Label>Street</Form.Label>\r\n              <Form.Control\r\n                type=\"street\"\r\n                placeholder=\"1234 Main St\"\r\n                required\r\n                onChange={(e) => setStreet(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId=\"city\">\r\n              <Form.Label>City</Form.Label>\r\n              <Form.Control\r\n                type=\"city\"\r\n                required\r\n                placeholder=\"City\"\r\n                onChange={(e) => setCity(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Form.Group controlId=\"zip\">\r\n              <Form.Label>Zip Code</Form.Label>\r\n              <Form.Control\r\n                type=\"zip\"\r\n                required\r\n                placeholder=\"Zip Code\"\r\n                onChange={(e) => setPostalCode(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId=\"country\">\r\n              <Form.Label>Country</Form.Label>\r\n              <Form.Control\r\n                type=\"country\"\r\n                required\r\n                placeholder=\"Country\"\r\n                onChange={(e) => setCountry(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Col className=\"text-right\">\r\n          <Button type=\"submit\" variant=\"outline-success\">\r\n            {loading ? (\r\n              <Spinner\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                size=\"sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n              />\r\n            ) : (\r\n              'Add Address'\r\n            )}\r\n          </Button>\r\n        </Col>\r\n      </ListGroupItem>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default ProfileAddressForm\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col, Container, Accordion, Alert } from 'react-bootstrap'\r\n\r\nimport UserAddressInfo from '../components/Profile/Address/UserAddressInfo'\r\nimport Addresses from '../components/Profile/Address/Addresses'\r\nimport AddressForm from '../components/Profile/Address/AddressForm'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserAddresses } from '../slices/userSlice'\r\n\r\nconst AddressScreen = () => {\r\n  const {\r\n    userAddresses: { addresses },\r\n    error,\r\n  } = useSelector((state) => state.userList)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserAddresses())\r\n  }, [dispatch])\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <h2>Your Addresses</h2>\r\n          <p>\r\n            <i>\r\n              View and update your Addresses right here. Manage your delivery\r\n              and billing addresses.\r\n            </i>\r\n          </p>\r\n          <>\r\n            {error ? (\r\n              <Alert>{error}</Alert>\r\n            ) : (\r\n              <Accordion>\r\n                <UserAddressInfo addresses={addresses} />\r\n                <Accordion.Collapse eventKey=\"0\" className=\"mb-3\">\r\n                  <AddressForm />\r\n                </Accordion.Collapse>\r\n                <Accordion.Collapse eventKey=\"1\" className=\"mb-3\">\r\n                  <Addresses addresses={addresses ? addresses : []} />\r\n                </Accordion.Collapse>\r\n              </Accordion>\r\n            )}\r\n          </>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default AddressScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col, Accordion, Alert, Button, ListGroup } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport UserAddressInfo from '../components/Profile/Address/UserAddressInfo'\r\nimport Addresses from '../components/Profile/Address/Addresses'\r\nimport AddressForm from '../components/Profile/Address/AddressForm'\r\nimport { getUserAddresses } from '../slices/userSlice'\r\nimport { placeOrder } from '../slices/orderSlice'\r\nimport OrderSummary from '../components/Cart/OrderSummary'\r\nimport Loader from '../components/Loader'\r\nimport { clearCart } from '../slices/cartSlice'\r\nconst PlaceOrderScreen = () => {\r\n  const { cart, totalPrice } = useSelector((state) => state.cartList)\r\n  const { loading, status, error } = useSelector((state) => state.orderList)\r\n  const {\r\n    userAddresses: { addresses },\r\n  } = useSelector((state) => state.userList)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (status === 'success') {\r\n      dispatch(clearCart())\r\n    } else {\r\n      dispatch(getUserAddresses())\r\n    }\r\n  }, [dispatch, status])\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : status === 'success' ? (\r\n        <>\r\n          <Col className=\"d-flex justify-content-between\">\r\n            <Link className=\"btn btn-light my-3\" to=\"/\">\r\n              Go Back\r\n            </Link>\r\n            <Link className=\"btn btn-light my-3\" to=\"/profile/orders\">\r\n              Orders\r\n            </Link>\r\n          </Col>\r\n          <Col\r\n            md={12}\r\n            className=\"d-flex justify-content-center\"\r\n            style={{ height: '40vh' }}\r\n          >\r\n            <i className=\"fas fa-check-square fa-9x text-success my-auto\" />\r\n          </Col>\r\n          <Alert variant=\"info\" className=\"my-auto text-center\">\r\n            Your order created successfully.{' '}\r\n            <Link to=\"profile/orders\">Check Your Orders </Link>\r\n          </Alert>\r\n        </>\r\n      ) : error ? (\r\n        <Alert variant=\"danger\">{error}</Alert>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            <Col md={12}>\r\n              <h2>Order Details</h2>\r\n              <p>\r\n                <i>Select your address or add a new one.</i>\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={8}>\r\n              <>\r\n                {error ? (\r\n                  <Alert>{error}</Alert>\r\n                ) : (\r\n                  <Accordion>\r\n                    <UserAddressInfo addresses={addresses} shipping />\r\n                    <Accordion.Collapse eventKey=\"0\" className=\"mb-3\">\r\n                      <AddressForm />\r\n                    </Accordion.Collapse>\r\n                    <Accordion.Collapse eventKey=\"1\" className=\"mb-3\">\r\n                      <Addresses\r\n                        addresses={addresses ? addresses : []}\r\n                        shipping\r\n                      />\r\n                    </Accordion.Collapse>\r\n                  </Accordion>\r\n                )}\r\n              </>\r\n            </Col>\r\n            <Col md={4} className=\"my-auto\">\r\n              <OrderSummary cart={cart} totalPrice={totalPrice} shipping />\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"btn-block\"\r\n                  variant=\"warning\"\r\n                  disabled={\r\n                    cart.length === 0 || addresses.length === 0 ? true : false\r\n                  }\r\n                  onClick={() => dispatch(placeOrder())}\r\n                >\r\n                  PLACE ORDER\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import Header from './components/Header'\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { Container } from 'react-bootstrap'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport OrdersScreen from './screens/OrdersScreen'\nimport AddressScreen from './screens/AddressScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\n\nfunction App() {\n  const { token } = useSelector((state) => state.userList.userData)\n  let routes\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" component={HomeScreen} exact />\n        <Route path=\"/product/:id\" component={ProductScreen} exact />\n        <Route path=\"/cart\" component={CartScreen} />\n        <Route path=\"/login\" component={LoginScreen} exact />\n        <Route path=\"/register\" component={RegisterScreen} exact />\n        <Route path=\"/profile/info\" component={ProfileScreen} exact />\n        <Route path=\"/profile/addresses\" component={AddressScreen} exact />\n        <Route path=\"/profile/orders\" component={OrdersScreen} exact />\n        <Route path=\"/placeorder\" component={PlaceOrderScreen} exact />\n        <Redirect to=\"/\" />\n      </Switch>\n    )\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" component={HomeScreen} exact />\n        <Route path=\"/product/:id\" component={ProductScreen} exact />\n        <Route path=\"/cart\" component={CartScreen} />\n        <Route path=\"/login\" component={LoginScreen} exact />\n        <Route path=\"/register\" component={RegisterScreen} exact />\n        <Redirect to=\"/login\" />\n      </Switch>\n    )\n  }\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>{routes}</Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { persistStore } from 'redux-persist'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nlet persistor = persistStore(store)\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}